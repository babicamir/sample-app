name: nginx app deploy to EKS
on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

env:
  project: amir
  env: stg
  aws-region: eu-central-1
  image-repository: amir-testing

jobs:
  pre-build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Install kubectl
      uses: azure/setup-kubectl@v3.0
      id: install

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

  build:
    runs-on: ubuntu-latest
    steps:



    - name: Build, tag, and push docker image to Amazon ECR
      env:
        REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        REPOSITORY: ${{ env.image-repository }}
        IMAGE_TAG: ${{ github.run_number }} 
      run: |
        echo $GITHUB_RUN_NUMBER

        docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
        docker tag $REGISTRY/$REPOSITORY:$IMAGE_TAG $REGISTRY/$REPOSITORY:latest

        docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
        docker push $REGISTRY/$REPOSITORY:latest
        export IMAGE_TAG=test
        echo $IMAGE_TAG

    - name: Update kube config
      run: aws eks update-kubeconfig --name amir-dev-cluster

     
    - name: Ckeck pods
      run: |
        kubectl get pods

    
    
    - name: Deploy to EKS
      run: |
 
        kubectl apply -k k8s/environments/dev/
      # kubectl apply -f k8s/kustomization.yaml
      # kubectl apply -f service.yaml